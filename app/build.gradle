apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

static def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

def keyStore = file('gank.jks')

repositories {
    flatDir {
        dirs 'libs'
    }
}

android {

    compileSdkVersion 29

    defaultConfig {
        applicationId 'com.johnny.gank'
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 3
        versionName '1.2'
        flavorDimensions 'market'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
        disable 'InvalidPackage'            //Some libraries have issues with this.
        disable 'OldTargetApi'              //Lint gives this warning but SDK 20 would be Android L Beta.
        disable 'MissingTranslation'
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }

    signingConfigs {
        release {
            storeFile keyStore
            storePassword 'gank666'
            keyAlias 'Gank'
            keyPassword '94a186'
        }
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if(keyStore.exists()) {
                println "using johnnyshieh's key"
                signingConfig signingConfigs.release
            }

            productFlavors.all { flavor ->
                manifestPlaceholders.put("UMENG_CHANNEL_VALUE",name)
            }
        }

        flavorDimensions 'market'

        productFlavors {
            fir {
                dimension 'market'
            }
        }
    }

    applicationVariants.all { variant ->
        if (variant.buildType.name == 'release') {
            variant.outputs.each { output ->
                def outputFile = output.outputFile
                if (outputFile != null && outputFile.name.endsWith('.apk')) {
                    def fileName = "Gank_v${defaultConfig.versionName}_${releaseTime()}_${variant.flavorName}.apk"
                    output.outputFileName = fileName
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation "junit:junit:$junit_version"
    implementation(name:'feedbacksdk', ext:'aar')

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.anko:anko-commons:$anko_version"
    implementation 'androidx.core:core-ktx:1.0.2'

    // Support
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    // architecture component
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // koin
    implementation "org.koin:koin-core:$koin_version"
    implementation "org.koin:koin-android:$koin_version"
    implementation "org.koin:koin-android-viewmodel:$koin_version"

    // RxJava 2
    implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid_version"

    // RxFlux
    implementation "com.johnny.rxflux:rxflux-androidx:$rxflux_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"

    implementation "com.google.code.gson:gson:$gson_version"
    implementation "com.github.bumptech.glide:glide:$glide_version"


    implementation "com.umeng.analytics:analytics:latest.integration"

    // LeakCanary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakcanary_version"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanary_version"
}
